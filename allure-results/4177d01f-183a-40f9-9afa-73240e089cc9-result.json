{"name": "Проверка основного функционала", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'counter_counter__num__3nue1')]\"}\n  (Session info: chrome=127.0.6533.73); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0094F653+11395]\n\t(No symbol) [0x0092B7A4]\n\t(No symbol) [0x00871A43]\n\t(No symbol) [0x008B56C8]\n\t(No symbol) [0x008B58AB]\n\t(No symbol) [0x008F26A2]\n\t(No symbol) [0x008D71E4]\n\t(No symbol) [0x008F03DC]\n\t(No symbol) [0x008D6F36]\n\t(No symbol) [0x008AA276]\n\t(No symbol) [0x008AAECD]\n\tGetHandleVerifier [0x00A52403+1071667]\n\tGetHandleVerifier [0x00A5C9C4+1114100]\n\tGetHandleVerifier [0x00A554B2+1084130]\n\tGetHandleVerifier [0x0097013B+145259]\n\t(No symbol) [0x00931693]\n\t(No symbol) [0x0092EFB8]\n\t(No symbol) [0x0092F157]\n\t(No symbol) [0x0092842E]\n\tBaseThreadInitThunk [0x76327BA9+25]\n\tRtlInitializeExceptionChain [0x778AC10B+107]\n\tRtlClearBits [0x778AC08F+191]", "trace": "self = <tests.test_general_function_check.TestMainFunctional object at 0x00000280E2546B60>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6738b8d2888633a87c720e3f3f4535c0\")>\n\n    @allure.title('Проверка основного функционала')\n    @allure.description('при добавлении ингредиента в заказ счётчик этого ингридиента увеличивается')\n    def test_counter_ingredients(self, browser):\n        main_page = MainPage(browser)\n        login_page = LoginPage(browser)\n        login_page.authorize()\n>       count_start = main_page.get_element_text(cp.check_ingredient_count)\n\ntests\\test_general_function_check.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\base_pages.py:19: in get_element_text\n    element_dom = self.browser.find_element(*locator)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000280E2577790>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...dInitThunk [0x76327BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x778AC10B+107]\\\\n\\\\tRtlClearBits [0x778AC08F+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[contains(@class, 'counter_counter__num__3nue1')]\"}\nE         (Session info: chrome=127.0.6533.73); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0094F653+11395]\nE       \t(No symbol) [0x0092B7A4]\nE       \t(No symbol) [0x00871A43]\nE       \t(No symbol) [0x008B56C8]\nE       \t(No symbol) [0x008B58AB]\nE       \t(No symbol) [0x008F26A2]\nE       \t(No symbol) [0x008D71E4]\nE       \t(No symbol) [0x008F03DC]\nE       \t(No symbol) [0x008D6F36]\nE       \t(No symbol) [0x008AA276]\nE       \t(No symbol) [0x008AAECD]\nE       \tGetHandleVerifier [0x00A52403+1071667]\nE       \tGetHandleVerifier [0x00A5C9C4+1114100]\nE       \tGetHandleVerifier [0x00A554B2+1084130]\nE       \tGetHandleVerifier [0x0097013B+145259]\nE       \t(No symbol) [0x00931693]\nE       \t(No symbol) [0x0092EFB8]\nE       \t(No symbol) [0x0092F157]\nE       \t(No symbol) [0x0092842E]\nE       \tBaseThreadInitThunk [0x76327BA9+25]\nE       \tRtlInitializeExceptionChain [0x778AC10B+107]\nE       \tRtlClearBits [0x778AC08F+191]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "description": "при добавлении ингредиента в заказ счётчик этого ингридиента увеличивается", "start": 1722267650580, "stop": 1722267661047, "uuid": "394ac2d4-0c29-408a-9540-57271f727a36", "historyId": "52daba219a647a632f7c49ea89f62ec6", "testCaseId": "52daba219a647a632f7c49ea89f62ec6", "fullName": "tests.test_general_function_check.TestMainFunctional#test_counter_ingredients", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_general_function_check"}, {"name": "subSuite", "value": "TestMainFunctional"}, {"name": "host", "value": "DESKTOP-VA8Q8IQ"}, {"name": "thread", "value": "33940-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_general_function_check"}]}